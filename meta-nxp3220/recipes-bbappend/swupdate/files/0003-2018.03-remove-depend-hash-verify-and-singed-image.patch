diff --git a/Kconfig b/Kconfig
index 1bce6d4..8738104 100644
--- a/Kconfig
+++ b/Kconfig
@@ -334,7 +334,6 @@ comment "Hash verification needs libssl"
 config SIGNED_IMAGES
 	bool "Enable verification of signed images"
 	depends on HAVE_LIBSSL
-	select HASH_VERIFY
 comment "Image verification (signed images) needs libssl"
 	depends on !HAVE_LIBSSL
 
diff --git a/core/parser.c b/core/parser.c
index 27c78ec..6be5599 100644
--- a/core/parser.c
+++ b/core/parser.c
@@ -238,9 +238,11 @@ int parse(struct swupdate_cfg *sw, const char *descfile)
 	 * If the software must be verified, all images
 	 * must have a valid hash to be checked
 	 */
+#ifdef CONFIG_HASH_VERIFY
 	if (check_missing_hash(&sw->images) ||
 		check_missing_hash(&sw->scripts))
 		ret = -EINVAL;
+#endif
 #else
 #ifndef CONFIG_HASH_VERIFY
 	if (check_hash_absent(&sw->images) ||
diff --git a/corelib/Makefile b/corelib/Makefile
index 4b30f9c..f3265fa 100644
--- a/corelib/Makefile
+++ b/corelib/Makefile
@@ -12,7 +12,7 @@ lib-y				+= installer.o \
 lib-$(CONFIG_DOWNLOAD)		+= downloader.o
 lib-$(CONFIG_MTD)		+= mtd-interface.o
 lib-$(CONFIG_LUA)		+= lua_interface.o lua_compat.o
-lib-$(CONFIG_HASH_VERIFY)	+= verify_signature.o
+lib-$(CONFIG_SIGNED_IMAGES)	+= verify_signature.o
 lib-$(CONFIG_ENCRYPTED_IMAGES)	+= swupdate_decrypt.o
 lib-$(CONFIG_LIBCONFIG)		+= swupdate_settings.o \
 				   parsing_library_libconfig.o
diff --git a/corelib/verify_signature.c b/corelib/verify_signature.c
index a3192f5..aab21f7 100644
--- a/corelib/verify_signature.c
+++ b/corelib/verify_signature.c
@@ -319,6 +319,8 @@ out:
 	return status;
 }
 #endif
+
+#if defined(CONFIG_HASH_VERIFY)
 struct swupdate_digest *swupdate_HASH_init(const char *SHAlength)
 {
 	struct swupdate_digest *dgst;
@@ -395,6 +397,7 @@ int swupdate_HASH_compare(unsigned char *hash1, unsigned char *hash2)
 
 	return 0;
 }
+#endif
 
 int swupdate_dgst_init(struct swupdate_cfg *sw, const char *keyfile)
 {
diff --git a/include/sslapi.h b/include/sslapi.h
index 213478e..ce662df 100644
--- a/include/sslapi.h
+++ b/include/sslapi.h
@@ -74,18 +74,25 @@ struct swupdate_digest {
 #define AES_BLOCK_SIZE	16
 #endif
 
-#if defined(CONFIG_HASH_VERIFY)
+#if defined(CONFIG_SIGNED_IMAGES)
 int swupdate_dgst_init(struct swupdate_cfg *sw, const char *keyfile);
+int swupdate_verify_file(struct swupdate_digest *dgst, const char *sigfile,
+	       	const char *file);
+#if defined(CONFIG_HASH_VERIFY)
 struct swupdate_digest *swupdate_HASH_init(const char *SHALength);
 int swupdate_HASH_update(struct swupdate_digest *dgst, unsigned char *buf,
 				size_t len);
 int swupdate_HASH_final(struct swupdate_digest *dgst, unsigned char *md_value,
 	       			unsigned int *md_len);
 void swupdate_HASH_cleanup(struct swupdate_digest *dgst);
-int swupdate_verify_file(struct swupdate_digest *dgst, const char *sigfile,
-	       	const char *file);
 int swupdate_HASH_compare(unsigned char *hash1, unsigned char *hash2);
-
+#else
+#define swupdate_HASH_init(p) ( NULL )
+#define swupdate_HASH_update(p, buf, len)	(-1)
+#define swupdate_HASH_final(p, result, len)	(-1)
+#define swupdate_HASH_cleanup(sw)
+#define swupdate_HASH_compare(hash1,hash2)	(0)
+#endif
 
 #else
 #define swupdate_dgst_init(sw, keyfile) ( 0 )
