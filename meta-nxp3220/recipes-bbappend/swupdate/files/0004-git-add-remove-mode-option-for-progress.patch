diff --git a/tools/progress.c b/tools/progress.c
index 579f167..ec8f2ce 100644
--- a/tools/progress.c
+++ b/tools/progress.c
@@ -24,6 +24,7 @@
 #include <getopt.h>
 
 #include <progress_ipc.h>
+#include <linux/reboot.h> 
 
 #define PSPLASH_MSG_SIZE	64
 
@@ -61,6 +62,7 @@ static struct option long_options[] = {
 	{"help", no_argument, NULL, 'h'},
 	{"psplash", no_argument, NULL, 'p'},
 	{"reboot", no_argument, NULL, 'r'},
+	{"mode", required_argument, NULL, 'm'},
 	{"wait", no_argument, NULL, 'w'},
 	{"color", no_argument, NULL, 'c'},
 	{"socket", required_argument, NULL, 's'},
@@ -75,6 +77,7 @@ static void usage(char *programname)
 	fprintf(stdout,
 		" -c, --color             : Use colors to show results\n"
 		" -r, --reboot            : reboot after a successful update\n"
+		" -m, --mode              : reboot mode (ex. recovery, bootloader, ...)\n"
 		" -w, --wait              : wait for a connection with SWUpdate\n"
 		" -p, --psplash           : send info to the psplash process\n"
 		" -s, --socket <path>     : path to progress IPC socket\n"
@@ -166,6 +169,22 @@ static void psplash_progress(char *pipe, struct progress_msg *pmsg)
 	free(buf);
 }
 
+#define __NR_SYSCALL_BASE
+#define __NR_reboot (__NR_SYSCALL_BASE + 88)
+
+static int system_reboot(const char *cmd)
+{
+        int ret;
+
+        if (!cmd)
+                ret = system("reboot");
+        else
+                ret = syscall(__NR_reboot,
+                                LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2,
+                                LINUX_REBOOT_CMD_RESTART2, cmd);
+        return ret;
+}
+
 int main(int argc, char **argv)
 {
 	int connfd;
@@ -183,9 +202,10 @@ int main(int argc, char **argv)
 	int opt_p = 0;
 	int c;
 	RECOVERY_STATUS	status = IDLE;		/* Update Status (Running, Failure) */
+	char *cmd = NULL;
 
 	/* Process options with getopt */
-	while ((c = getopt_long(argc, argv, "cwprhs:",
+	while ((c = getopt_long(argc, argv, "cwprhs:m:",
 				long_options, NULL)) != EOF) {
 		switch (c) {
 		case 'c':
@@ -200,6 +220,9 @@ int main(int argc, char **argv)
 		case 'r':
 			opt_r = 1;
 			break;
+		case 'm':
+			cmd = optarg;
+			break;
 		case 's':
 			SOCKET_PROGRESS_PATH = strdup(optarg);
 			break;
@@ -305,7 +328,7 @@ int main(int argc, char **argv)
 			psplash_ok = 0;
 			if ((msg.status == SUCCESS) && opt_r) {
 				sleep(5);
-				if (system("reboot") < 0) { /* It should never happen */
+				if (system_reboot(cmd) < 0) { /* It should never happen */
 					fprintf(stdout, "Please reset the board.\n");
 				}
 			}
